name: iOS Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.0'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.0'

    - name: Update dependencies
      run: flutter pub upgrade

    - name: Install dependencies
      run: flutter pub get

    - name: Update iOS Deployment Target
      run: |
        sed -i '' 's/platform :ios, '9.0'/platform :ios, '14.0'/' ios/Podfile
        if ! grep -q "platform :ios, '14.0'" ios/Podfile; then
          echo "platform :ios, '14.0'" >> ios/Podfile
        fi 

    - name: Set CocoaPods Base Configuration
      run: |
        cd ios
        sed -i '' 's|FLUTTER_BUILD_MODE=release|FLUTTER_BUILD_MODE=release\n#include "Pods/Target Support Files/Pods-Runner/Pods-Runner.profile.xcconfig"|' Flutter/Release.xcconfig
        cd ..

    - name: Build iOS
      run: flutter build ios --release --no-codesign

    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..

    - name: Create exportOptions.plist
      run: |
        cat <<EOF > ios/exportOptions.plist
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>app-store</string>
          <key>uploadBitcode</key>
          <false/>
          <key>uploadSymbols</key>
          <true/>
          <key>compileBitcode</key>
          <true/>
        </dict>
        </plist>
        EOF

    - name: Build iOS IPA
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_API_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_ISSUER }}
      run: |
        flutter build ipa --release --export-options-plist=ios/exportOptions.plist

    - name: Deploy to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app -f build/ios/ipa/TeamwayApp.ipa \
        -t ios --apiKey $APP_STORE_CONNECT_API_KEY --apiIssuer $APP_STORE_CONNECT_API_ISSUER


